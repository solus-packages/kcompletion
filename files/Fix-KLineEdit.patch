From 31f226116f99bcf40ddc67fe6328594d5fb46222 Mon Sep 17 00:00:00 2001
From: Dan Weatherill <dan.weatherill@cantab.net>
Date: Fri, 19 Jan 2018 09:48:01 +0100
Subject: [PATCH] Fix incorrect emission of textEdited() by KLineEdit

The unit test of kLineEdit was previously checking incorrectly that
textEdited _HAD_ been emitted when the text is changed with setText().
This is undesired behaviour.
This patch fixes the unit test, and changes the problematic behaviour by
removing the extra emission of textEdited in the private signal
_k_textChanged.
In addition this is the underlying cause of a bug in kdevelop (and
probably several others).

BUG: 388798
BUG: 373004
---
 autotests/klineedit_unittest.cpp | 31 ++++++++++++++++++++++++++++---
 src/klineedit.cpp                |  1 -
 2 files changed, 28 insertions(+), 4 deletions(-)

diff --git a/autotests/klineedit_unittest.cpp b/autotests/klineedit_unittest.cpp
index 111978d..185a4d9 100644
--- a/autotests/klineedit_unittest.cpp
+++ b/autotests/klineedit_unittest.cpp
@@ -68,7 +68,7 @@ private Q_SLOTS:
 #endif
         QCOMPARE(textChangedSpy.count(), 1);
         QCOMPARE(textChangedSpy[0][0].toString(), w.text());
-        QCOMPARE(textEditedSpy.count(), 1);
+        QCOMPARE(textEditedSpy.count(), 0);
         QVERIFY(!w.isModified());
 #ifndef KCOMPLETION_NO_DEPRECATED
         userTextChangedSpy.clear();
@@ -76,6 +76,31 @@ private Q_SLOTS:
         textChangedSpy.clear();
         textEditedSpy.clear();
 
+        // calling clear should emit textChanged and userTextChanged, but not textEdited
+        w.clear();
+        QCOMPARE(textChangedSpy.count(),1);
+        QCOMPARE(textEditedSpy.count(),0);
+#ifndef KCOMPLETION_NO_DEPRECATED
+        QCOMPARE(userTextChangedSpy.count(),1);
+#endif
+
+        //if text box is already empty, calling clear() shouldn't emit
+        // any more signals
+        w.clear();
+        QCOMPARE(textChangedSpy.count(),1);
+        QCOMPARE(textEditedSpy.count(),0);
+#ifndef KCOMPLETION_NO_DEPRECATED
+        QCOMPARE(userTextChangedSpy.count(),1);
+#endif
+
+        //set the text back for further tests below
+        w.setText("Hello worl");
+#ifndef KCOMPLETION_NO_DEPRECATED
+        userTextChangedSpy.clear();
+#endif
+        textChangedSpy.clear();
+        textEditedSpy.clear();
+
         // typing emits all three signals
         QTest::keyClick(&w, Qt::Key_D);
         QCOMPARE(w.text(), QString::fromLatin1("Hello world"));
@@ -85,7 +110,7 @@ private Q_SLOTS:
 #endif
         QCOMPARE(textChangedSpy.count(), 1);
         QCOMPARE(textChangedSpy[0][0].toString(), w.text());
-        QCOMPARE(textEditedSpy.count(), 2);
+        QCOMPARE(textEditedSpy.count(), 1);
         QCOMPARE(textEditedSpy[0][0].toString(), w.text());
         QVERIFY(w.isModified());
 
@@ -169,7 +194,7 @@ private Q_SLOTS:
         QCOMPARE(userTextChangedSpy.count(), 2);
 #endif
         QCOMPARE(textChangedSpy.count(), 2);
-        QCOMPARE(textEditedSpy.count(), 2);
+        QCOMPARE(textEditedSpy.count(), 0);
 #ifndef KCOMPLETION_NO_DEPRECATED
         userTextChangedSpy.clear();
 #endif
diff --git a/src/klineedit.cpp b/src/klineedit.cpp
index 6e0b02e..6853d7c 100644
--- a/src/klineedit.cpp
+++ b/src/klineedit.cpp
@@ -60,7 +60,6 @@ void KLineEditPrivate::_k_textChanged(const QString &text)
 #ifndef KCOMPLETION_NO_DEPRECATED
         emit q->userTextChanged(text);
 #endif
-        emit q->textEdited(text);
     }
 }
 
